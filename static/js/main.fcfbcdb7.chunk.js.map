{"version":3,"sources":["logo.svg","components/Button.jsx","components/Display.jsx","components/Buttons.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","state","react_default","a","createElement","style","cursor","onClick","this","props","className","data-value","value","label","Component","Display","res","data","join","textAlign","overflow","Buttons","children","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","calculateOperations","result","operations","math","eval","setState","handleClick","e","target","getAttribute","ops","lastOperation","length","indexOf","newOperations","update","$push","components_Display","components_Buttons","components_Button","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fcfbcdb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nclass Button extends Component {\r\n\tstate = {};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\tonClick={this.props.onClick}\r\n\t\t\t\tclassName=\"Button\"\r\n\t\t\t\tdata-value={this.props.value}\r\n\t\t\t>\r\n\t\t\t\t{this.props.label}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nclass Display extends Component {\r\n\tstate = {};\r\n\trender() {\r\n\t\tconst res = this.props.data.join('');\r\n\t\treturn (\r\n\t\t\t<div className=\"Display container col-md-6\">\r\n\t\t\t\t<h1 className=\"border border-dark fill-div m-0\" style={{ textAlign: 'right', overflow: 'hidden' }}>\r\n\t\t\t\t\t{res ? res : 0}\r\n\t\t\t\t</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Display;\r\n","import React, { Component } from 'react';\r\n\r\nclass Buttons extends Component {\r\n\tstate = {};\r\n\trender() {\r\n\t\treturn <div className=\"Buttons container col-md-6\">{this.props.children}</div>;\r\n\t}\r\n}\r\n\r\nexport default Buttons;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from './components/Button';\nimport Display from './components/Display';\nimport Buttons from './components/Buttons';\nimport update from 'immutability-helper';\nimport math from 'mathjs';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { operations: [] };\n\t}\n\n\tcalculateOperations = () => {\n\t\tlet result = this.state.operations.join('');\n\t\tif (result) {\n\t\t\tresult = math.eval(result);\n\t\t\tthis.setState({\n\t\t\t\toperations: [ result ]\n\t\t\t});\n\t\t}\n\t};\n\n\thandleClick = (e) => {\n\t\tconst value = e.target.getAttribute('data-value');\n\t\tconst ops = [ '*', '-', '+', '/' ];\n\t\tconst lastOperation = this.state.operations[this.state.operations.length - 1];\n\t\tswitch (value) {\n\t\t\tcase 'C': // clear operations\n\t\t\t\tthis.setState({\n\t\t\t\t\toperations: []\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '=': //calculate result\n\t\t\t\tthis.calculateOperations();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// append new operation\n\t\t\t\tif (\n\t\t\t\t\t!lastOperation ||\n\t\t\t\t\tops.indexOf(value) === -1 ||\n\t\t\t\t\t(ops.indexOf(value) > -1 && ops.indexOf(lastOperation) === -1)\n\t\t\t\t) {\n\t\t\t\t\tconst newOperations = update(this.state.operations, {\n\t\t\t\t\t\t$push: [ value ]\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\toperations: newOperations\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App container col-md-8\">\n\t\t\t\t<Display data={this.state.operations} />\n\t\t\t\t<Buttons>\n\t\t\t\t\t<table className=\"table table-bordered table-dark\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"7\" value=\"7\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"8\" value=\"8\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"9\" value=\"9\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"/\" value=\"/\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"4\" value=\"4\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"5\" value=\"5\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"6\" value=\"6\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"x\" value=\"*\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"1\" value=\"1\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"2\" value=\"2\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"3\" value=\"3\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"-\" value=\"-\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"C\" value=\"C\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"0\" value=\"0\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"=\" value=\"=\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.handleClick} label=\"+\" value=\"+\" />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</Buttons>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}